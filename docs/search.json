[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"这是 Mastering Shiny 的在线版本，该书目前正在早期开发中，预计由 O’Reilly Media 于 2020 年底发行。Shiny framework creating web applications using R code.\ndesigned primarily data scientists mind, end, can create pretty complicated Shiny apps knowledge HTML, CSS, JavaScript.\nhand, Shiny doesn’t limit creating trivial prefabricated apps: user interface components can easily customized extended, server uses reactive programming let create type back end logic want.\nShiny designed feel almost magically easy ’re getting started, yet deeper get works, realize ’s built general building blocks strong software engineering principles behind .Shiny 是一个使用 R 代码创建 Web 应用程序的框架。它的设计主要考虑了数据科学家的需求，为此，您可以在不了解 HTML、CSS 或 JavaScript 的情况下创建相当复杂的 Shiny 应用程序。另一方面，Shiny 并不限制您创建琐碎或预制的应用程序：它的用户界面组件可以轻松自定义或扩展，并且它的服务器使用反应式编程来让您创建您想要的任何类型的后端逻辑。 Shiny 的设计初衷是让您在刚开始使用时感觉非常简单，但您越深入地了解它的工作原理，您就越会意识到它是由通用构建块构建而成，而这些构建块背后都有强大的软件工程原理。Today, Shiny used almost many niches industries R .\n’s used academia teaching tool statistical concepts, way get undergrads excited learning write code, splashy medium showing novel statistical methods models.\n’s used big pharma companies speed collaboration scientists analysts drug development.\n’s used Silicon Valley tech companies set realtime metrics dashboards incorporate advanced analytics.book designed take knowing nothing Shiny expert developer can write large complex apps still maintainable performant.\n’ll gain deep understanding reactive programming model underlies Shiny, well building tool box useful techniques solve common app challenges.","code":""},{"path":"index.html","id":"license","chapter":"Welcome","heading":"License","text":"book licensed Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License.code samples book licensed Creative Commons CC0 1.0 Universal (CC0 1.0), .e. public domain.","code":""},{"path":"preface.html","id":"preface","chapter":"Preface","heading":"Preface","text":"","code":""},{"path":"preface.html","id":"what-is-shiny","chapter":"Preface","heading":"0.1 What is Shiny?","text":"’ve never used Shiny , welcome!\nShiny R package allows easily create rich, interactive web apps.\nShiny allows take work R expose via web browser anyone can use .\nShiny makes look awesome making easy produce polished web apps minimum amount pain.past, creating web apps hard R users :need deep knowledge web technologies like HTML, CSS JavaScript.need deep knowledge web technologies like HTML, CSS JavaScript.Making complex interactive apps requires careful analysis interaction flows make sure input changes, related outputs updated.Making complex interactive apps requires careful analysis interaction flows make sure input changes, related outputs updated.Shiny makes significantly easier R programmer create web apps :Providing carefully curated set user interface (UI short) functions generate HTML, CSS, JavaScript needed common tasks.\nmeans don’t need know details HTML/CSS/JavaScript want go beyond basics Shiny provides .Providing carefully curated set user interface (UI short) functions generate HTML, CSS, JavaScript needed common tasks.\nmeans don’t need know details HTML/CSS/JavaScript want go beyond basics Shiny provides .Introducing new style programming called reactive programming automatically tracks dependencies pieces code.\nmeans whenever input changes, Shiny can automatically figure smallest amount work update related outputs.Introducing new style programming called reactive programming automatically tracks dependencies pieces code.\nmeans whenever input changes, Shiny can automatically figure smallest amount work update related outputs.People use Shiny :Create dashboards track important high-level performance indicators, facilitating drill metrics need investigation.Create dashboards track important high-level performance indicators, facilitating drill metrics need investigation.Replace hundreds pages PDFs interactive apps allow user jump exact slice results care .Replace hundreds pages PDFs interactive apps allow user jump exact slice results care .Communicate complex models non-technical audience informative visualisations interactive sensitivity analysis.Communicate complex models non-technical audience informative visualisations interactive sensitivity analysis.Provide self-service data analysis common workflows, replacing email requests Shiny app allows people upload data perform standard analyses.\ncan make sophisticated R analyses available users programming skills.Provide self-service data analysis common workflows, replacing email requests Shiny app allows people upload data perform standard analyses.\ncan make sophisticated R analyses available users programming skills.Create interactive demos teaching statistics data science concepts allow learners tweak inputs observe downstream effects changes analysis.Create interactive demos teaching statistics data science concepts allow learners tweak inputs observe downstream effects changes analysis.short, Shiny gives ability pass R superpowers anyone can use web.","code":""},{"path":"preface.html","id":"who-should-read-this-book","chapter":"Preface","heading":"0.2 Who should read this book?","text":"book aimed two main audiences:R users interested learning Shiny order turn analyses interactive web apps.\nget book, comfortable using R data analysis, written least functions.R users interested learning Shiny order turn analyses interactive web apps.\nget book, comfortable using R data analysis, written least functions.Existing Shiny users want improve knowledge theory underlying Shiny order write higher-quality apps faster easily.\nfind book particularly helpful apps starting get bigger ’re starting problems managing complexity.Existing Shiny users want improve knowledge theory underlying Shiny order write higher-quality apps faster easily.\nfind book particularly helpful apps starting get bigger ’re starting problems managing complexity.","code":""},{"path":"preface.html","id":"what-will-you-learn","chapter":"Preface","heading":"0.3 What will you learn?","text":"book divided four parts:“Getting started”, ’ll learn basics Shiny can get running quickly possible.\n’ll learn basics app structure, useful UI components, foundations reactive programming.“Getting started”, ’ll learn basics Shiny can get running quickly possible.\n’ll learn basics app structure, useful UI components, foundations reactive programming.“Shiny action” builds basics help solve common problems including giving feedback user, uploading downloading data, generating UI code, reducing code duplication, using Shiny program tidyverse.“Shiny action” builds basics help solve common problems including giving feedback user, uploading downloading data, generating UI code, reducing code duplication, using Shiny program tidyverse.“Mastering reactivity”, ’ll go deep theory practice reactive programming, programming paradigm underlies Shiny.\n’re existing Shiny user, ’ll get value chapter give solid theoretical underpinning allow create new tools specifically tailored problems.“Mastering reactivity”, ’ll go deep theory practice reactive programming, programming paradigm underlies Shiny.\n’re existing Shiny user, ’ll get value chapter give solid theoretical underpinning allow create new tools specifically tailored problems.Finally, “Best practices” ’ll finish survey useful techniques making Shiny apps work well production.\n’ll learn decompose complex apps functions modules, use packages organise code, test code ensure ’s correct, measure improve performance.Finally, “Best practices” ’ll finish survey useful techniques making Shiny apps work well production.\n’ll learn decompose complex apps functions modules, use packages organise code, test code ensure ’s correct, measure improve performance.","code":""},{"path":"preface.html","id":"what-wont-you-learn","chapter":"Preface","heading":"0.4 What won’t you learn?","text":"focus book making effective Shiny apps understanding underlying theory reactivity.\n’ll best showcase best practices data science, R programming, software engineering, ’ll need references master important skills.\nenjoy writing book, might enjoy books topics: R Data Science, Advanced R, R Packages.also number important topics specific Shiny don’t cover:book covers built-user interface toolkit.\ndoesn’t provide sexiest possible design, ’s simple learn gets long way.\nadditional needs (just get bored defaults), number packages provide alternative front ends.\nSee Section ?? details.book covers built-user interface toolkit.\ndoesn’t provide sexiest possible design, ’s simple learn gets long way.\nadditional needs (just get bored defaults), number packages provide alternative front ends.\nSee Section ?? details.Deployment Shiny apps.\nPutting Shiny “production” outside scope book hugely varies company company, much unrelated R (majority challenges tend cultural organisational, technical).\n’re new Shiny production, recommend starting Joe Cheng’s 2019 rstudio::conf keynote: https://rstudio.com/resources/rstudioconf-2019/shiny--production-principles-practices--tools/.\ngive lay land, discussing broadly putting Shiny production entails overcome challenges ’re likely face.\n’ve done , see RStudio Connect website learn RStudio’s product deploying apps within company Shiny website common deployment scenarios.Deployment Shiny apps.\nPutting Shiny “production” outside scope book hugely varies company company, much unrelated R (majority challenges tend cultural organisational, technical).\n’re new Shiny production, recommend starting Joe Cheng’s 2019 rstudio::conf keynote: https://rstudio.com/resources/rstudioconf-2019/shiny--production-principles-practices--tools/.\ngive lay land, discussing broadly putting Shiny production entails overcome challenges ’re likely face.\n’ve done , see RStudio Connect website learn RStudio’s product deploying apps within company Shiny website common deployment scenarios.","code":""},{"path":"preface.html","id":"prerequisites","chapter":"Preface","heading":"0.5 Prerequisites","text":"continue, make sure software need book:R: don’t R installed already, may reading wrong book; assume basic familiarity R throughout book.\n’d like learn use R, ’d recommend R Data Science designed get running R minimum fuss.R: don’t R installed already, may reading wrong book; assume basic familiarity R throughout book.\n’d like learn use R, ’d recommend R Data Science designed get running R minimum fuss.RStudio: RStudio free open source integrated development environment (IDE) R.\ncan write use Shiny apps R environment (including R GUI ESS), RStudio nice features specifically authoring, debugging, deploying Shiny apps.\nrecommend giving try, ’s required successful Shiny book.\ncan download RStudio Desktop https://www.rstudio.com/products/rstudio/downloadRStudio: RStudio free open source integrated development environment (IDE) R.\ncan write use Shiny apps R environment (including R GUI ESS), RStudio nice features specifically authoring, debugging, deploying Shiny apps.\nrecommend giving try, ’s required successful Shiny book.\ncan download RStudio Desktop https://www.rstudio.com/products/rstudio/downloadR packages: book uses bunch R packages.\ncan install running:\n\ninstall.packages(c(\n  \"gapminder\", \"ggforce\", \"gh\", \"globals\", \"openintro\", \"profvis\", \n  \"RSQLite\", \"shiny\", \"shinycssloaders\", \"shinyFeedback\", \n  \"shinythemes\", \"testthat\", \"thematic\", \"tidyverse\", \"vroom\", \n  \"waiter\", \"xml2\", \"zeallot\" \n))\n’ve downloaded Shiny past, make sure least version 1.6.0.R packages: book uses bunch R packages.\ncan install running:’ve downloaded Shiny past, make sure least version 1.6.0.","code":"\ninstall.packages(c(\n  \"gapminder\", \"ggforce\", \"gh\", \"globals\", \"openintro\", \"profvis\", \n  \"RSQLite\", \"shiny\", \"shinycssloaders\", \"shinyFeedback\", \n  \"shinythemes\", \"testthat\", \"thematic\", \"tidyverse\", \"vroom\", \n  \"waiter\", \"xml2\", \"zeallot\" \n))"},{"path":"preface.html","id":"acknowledgements","chapter":"Preface","heading":"0.6 Acknowledgements","text":"book written open chapters advertised twitter complete.\ntruly community effort: many people read drafts, fixed typos, suggested improvements, contributed content.\nWithout contributors, book wouldn’t nearly good , ’m deeply grateful help.big thank 83 people contributed specific improvements via GitHub pull requests (alphabetical order username): Adam Pearce (@1wheel), Adi Sarid (@adisarid), Alexandros Melemenidis (@alex-m-ffm), Anton Klåvus (@antonvsdata), Betsy Rosalen (@betsyrosalen), Michael Beigelmacher (@brooklynbagel), Bryan Smith (@BSCowboy), c1au6io_hh (@c1au6i0), @canovasjm, Chris Beeley (@ChrisBeeley), @chsafouane, Chuliang Xiao (@ChuliangXiao), Conor Neilson (@condwanaland), @d-edison, Dean Attali (@daattali), DanielDavid521 (@Danieldavid521), David Granjon (@DivadNojnarg), Eduardo Vásquez (@edovtp), Emil Hvitfeldt (@EmilHvitfeldt), Emilio (@emilopezcano), Emily Riederer (@emilyriederer), Eric Simms (@esimms999), Federico Marini (@federicomarini), Frederik Kok Hansen (@fkoh111), Frans van Dunné (@FvD), Giorgio Comai (@giocomai), Hedley (@heds1), Henning (@henningsway), Hlynur (@hlynurhallgrims), @hsm207, @jacobxk, James Pooley (@jamespooley), Joe Cheng (@jcheng5), Julien Colomb (@jcolomb), Juan C Rodriguez (@jcrodriguez1989), Jennifer (Jenny) Bryan (@jennybc), Jim Hester (@jimhester), Joachim Gassen (@joachim-gassen), Jon Calder (@jonmcalder), Jonathan Carroll (@jonocarroll), Julian Stanley (@julianstanley), @jyuu, @kaanpekel, Karandeep Singh (@kdpsingh), Robert Kirk DeLisle (@KirkDCO), Elaine (@loomalaine), Malcolm Barrett (@malcolmbarrett), Marly Gotti (@marlycormar), Matthew Wilson (@MattW-Geospatial), Matthew T. Warkentin (@mattwarkentin), Mauro Lepore (@maurolepore), Maximilian Rohde (@maxdrohde), Matthew Berginski (@mbergins), Michael Dewar (@michael-dewar), Mine Cetinkaya-Rundel (@mine-cetinkaya-rundel), Maria Paula Caldas (@mpaulacaldas), nthobservation (@nthobservation), Pietro Monticone (@pitmonticone), psychometrician (@psychometrician), Ram Thapa (@raamthapa), Janko Thyson (@rappster), Rebecca Janis (@rbjanis), Tom Palmer (@remlapmot), Russ Hyde (@russHyde), Barret Schloerke (@schloerke), Scott (@scottyd22), Matthew Sedaghatfar (@sedaghatfar), Shixiang Wang (@ShixiangWang), Praer (Suthira Owlarn) (@sowla), Sébastien Rochette (@statnmap), @stevensbr, André Calero Valdez (@Sumidu), Tanner Stauss (@tmstauss), Tony Fujs (@tonyfujs), Stefan Moog (@trekonom), Jeff Allen (@trestletech), Trey Gilliland (@treygilliland), Albrecht (@Tungurahua), Valeri Voev (@ValeriVoev), Vickus (@Vickusr), William Doane (@WilDoane), 黄湘云 (@XiangyunHuang), gXcloud (@xwydq).","code":"#> Warning: package 'dplyr' was built under R version 4.2.3"},{"path":"preface.html","id":"colophon","chapter":"Preface","heading":"0.7 Colophon","text":"book written RStudio using bookdown.\nwebsite hosted netlify, automatically updated every commit Github Actions.\ncomplete source available GitHub.version book built R version 4.2.0 (2022-04-22 ucrt) following packages:","code":""}]
